<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/jdbc  http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
		http://www.springframework.org/schema/security 
		http://www.springframework.org/schema/security/spring-security-3.1.xsd
	">
	<!-- use-expressions="true" je uključen zato jer SpEL omogućuje složenije 
		izraze za access. Izraze koji sadže logičke operatore and or ili not -->
	<http auto-config="true" use-expressions="true">
		<!-- For any given URL request, Spring Security evaluates authorization 
			rules in top to bottom order. The first rule matching the URL pattern will 
			be applied. Typically, this means that your authorization rules will be ordered 
			starting from most-specific to least-specific order. -->
		<intercept-url pattern="/login*" access="permitAll" />
		<intercept-url pattern="/register*" access="permitAll" />
		<intercept-url pattern="/VAADIN/**" access="permitAll" />
		<intercept-url pattern="/styles/**" access="permitAll" />		
		<intercept-url pattern="/UIDL*" access="permitAll" />
		
		<intercept-url pattern="/**" access="hasRole('ROLE_USER')" />

		<form-login login-page="/login" />

		<!-- Postavljanje Logout konfikuracije -->
		<!-- invalidate-session="false" se treba koristiti ako želimo zadržati 
			podatke os sessionu i za sljedeće logiranje. Npr. ako imamo aplikaciju s 
			shoping cartom -->
		<logout invalidate-session="true" logout-success-url="/"
			logout-url="/logout" />

		<!-- Omogućava postavljanje checkboxa remeber me, Key mora biti unique 
			za aplikaciju i zapisati će se u cookie. Uz ime aplikacije u key bi se trebalo 
			dodati 36 random znakova -->
		<remember-me key="jbcpPetStore-vaadin" token-validity-seconds="3600" data-source-ref="dataSource" />
	</http>

	<!-- Spring Security debuging logs -->
	<!-- <debug/> -->
	
	<!-- Omogućava postavljanje anotacija PreAuthorize i PostAuthorize -->
	<global-method-security pre-post-annotations="enabled"/>

	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="jdbcUserService">
			<password-encoder ref="passwordEncoder">
				<salt-source ref="saltSource" />
			</password-encoder>
		</authentication-provider>
	</authentication-manager>

	<!-- Ch 4 In-memory HSQLDB -->
	<jdbc:embedded-database id="dataSource" type="HSQL">
		<!-- Inicijalizacija data sourcea -->
		<jdbc:script location="classpath:sql-scripts/security-schema.sql" />
		<jdbc:script location="classpath:sql-scripts/test-users-groups-data.sql" />
		<jdbc:script location="classpath:sql-scripts/remember-me-schema.sql" />
	</jdbc:embedded-database>
</beans:beans>